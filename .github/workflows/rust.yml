name: Rust Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    # Use a matrix strategy to build on different OS
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }} # Run on the OS specified in the matrix

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build release binary
      run: cargo build --release --verbose

    - name: Set binary path and name
      id: set_paths
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          echo "binary_path=target/release/git-manager.exe" >> $GITHUB_OUTPUT
          echo "artifact_name=git-manager-windows-amd64.exe" >> $GITHUB_OUTPUT
        elif [ "${{ runner.os }}" == "macOS" ]; then
          echo "binary_path=target/release/git-manager" >> $GITHUB_OUTPUT
          echo "artifact_name=git-manager-macos-amd64" >> $GITHUB_OUTPUT
        else # Linux
          echo "binary_path=target/release/git-manager" >> $GITHUB_OUTPUT
          echo "artifact_name=git-manager-linux-amd64" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.set_paths.outputs.artifact_name }}
        path: ${{ steps.set_paths.outputs.binary_path }}

